<?php
/**
 * fopen: функция fopen() открывает файл или URL. Принимает два обязательных аргумента - имя файла и режим доступа (например, "r" для чтения, "w" для записи). Пример:
 */
$file = fopen("file.txt", "r");
/**
 * fclose: функция fclose() закрывает открытый файл. Она принимает дескриптор файла, который был открыт с помощью fopen(). Пример:
 */
fclose($file);
/**
 * fseek: функция fseek() устанавливает позицию в файле. Принимает дескриптор файла и смещение от начала файла. Пример:
 */
fseek($file, 0, SEEK_SET); // установить указатель в начало файла
 /**
 * Чтение данных из файла:
 */
$contents = fread($file, filesize("file.txt"));
 /**
 * Запись данных в файл:
 */
fwrite($file, "Новый текст для записи");
 /**
 * Обязательно не забывайте проверять успешность открытия файла с помощью fopen() и закрывать файл после окончания работы с ним с помощью fclose(), чтобы избежать утечки ресурсов.
 */


 /**
  * Относительный путь к файлу:
  */
$filename = "folder/file.txt";
$filepath = __DIR__ . "files.php/" . $filename;

/**
 * Абсолютный путь к файлу:
 */
$abs_filepath = "/var/www/html/project/folder/file.txt";

/**
 * file_exists($filename): проверяет существование файла или директории.
 * is_file($filename): проверяет, является ли путь файлом.
 * is_dir($filename): проверяет, является ли путь директорией.
 * mkdir($dirname): создает директорию.
 * rmdir($dirname): удаляет директорию.
 * unlink($filename): удаляет файл.
 * copy($source, $destination): копирует файл.
 */

$filename = "folder/file.txt";
$filepath = __DIR__ . "files.php/" . $filename;

if (file_exists($filepath)) {
    $content = file_get_contents($filepath);
    echo $content;
} else {
    echo "Файл не найден.";
}

/**
 * include(): Эта функция включает и выполняет указанный файл во время выполнения скрипта. Если файл не найден, будет выдано предупреждение, но скрипт продолжит работу. Пример использования:
 */
include 'file.php';

/**
 * include_once(): Подобно include(), но файл будет подключен только один раз в рамках скрипта, даже если он был вызван несколько раз. Пример:
 */
include_once 'file.php';

/**
 * require(): Эта функция подключает и выполняет указанный файл во время выполнения скрипта, но при ошибке подключения будет выдана фатальная ошибка, и выполнение скрипта остановится. Пример:
 */
require 'file.php';

/**
 * require_once(): Подобно require(), но файл будет подключен только один раз в рамках скрипта. Пример:
 */
require 'file.php';

/**
 * Используйте эти функции для включения других файлов в ваши PHP-скрипты, например, для повторного использования кода, разделения функциональности на отдельные файлы и т.д. Каждая из этих функций имеет свои особенности, выбирайте тот вариант, который лучше всего подходит для вашего случая в зависимости от того, нужно ли вам продолжить выполнение скрипта при ошибке подключения файла или нет.
 */